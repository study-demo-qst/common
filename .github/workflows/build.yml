name: snapshot build

on: 
  push:
    branches-ignore:
      - master
    paths-ignore:
      - '.github/workflows/release.yml'
      - '.github/workflows/tag.yml'
      - '.github/workflows/build_chain.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: none

    steps:
      # Set Up前にcheckout必要
    - uses: actions/checkout@v4

    - name: Set Up
      id: setup
      uses: ./.github/workflows
      with:
        release_build: false

    - name: Build with Maven
      run: mvn --settings ./settings.xml clean install -Dbuild_time=${{ steps.setup.outputs.build_time }}

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: src
        path: .

  test:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: none

    steps:
      # Set Up前にcheckout必要
    - uses: actions/checkout@v4
    
    - name: Set Up
      id: setup
      uses: ./.github/workflows
      with:
        release_build: false

    - name: Test
      run: mvn --settings ./settings.xml test -Dbuild_time=${{ steps.setup.outputs.build_time }}

  deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Set Up前にcheckout必要
    - uses: actions/checkout@v4
    
    - name: Set Up
      id: setup
      uses: ./.github/workflows
      with:
        release_build: false

    - name: Deploy to GitHub Packages
      run: mvn --settings ./settings.xml deploy -Dbuild_time=${{ steps.setup.outputs.build_time }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  delete-old-packages:
    needs: deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: none

      
    steps:
    - name: Token発行（Github App）
      id: generate_token
      uses: tibdex/github-app-token@v1.8
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.PRIVATE_KEY }}

    - name: Token確認
      env:
        TOKEN: ${{ steps.generate_token.outputs.token }}
      run: |
        echo "Access Token: ghs_"
        echo "Access Token: ${TOKEN:4}"

      # Set Up前にcheckout必要
    - uses: actions/checkout@v4
    
    - name: Set Up
      id: setup
      uses: ./.github/workflows
      with:
        release_build: false

    - name: Get package versions created within the last period
      id: pkgids
      run: |
        # Get the date of the period ago (e.g., 3 months ago)
        period_ago=$(date -d '${{ vars.PACKAGE_RETENTION_PERIOD }} months ago' '+%Y-%m-%dT%H:%M:%SZ')
        # period_ago=$(date -d '3 days ago' '+%Y-%m-%dT%H:%M:%SZ')
        # period_ago=$(date -d '180 seconds ago' '+%Y-%m-%dT%H:%M:%SZ')

        # Print the package name and period_ago for debugging
        echo "Package: ${{ steps.setup.outputs.pkg }}, Period Ago: $period_ago"
        
        # Fetch package versions
        res=$(curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ steps.generate_token.outputs.token }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/orgs/coding-sample/packages/maven/${{ steps.setup.outputs.pkg }}/versions)
        
        echo "Packages ---"
        echo "${res}"
        echo "------------"

        # Extract IDs of packages created within the last period
        ids=$(echo "${res}" | jq -r --arg DATE "$period_ago" '.[] | select(.updated_at <= $DATE) | .id | tostring' | paste -sd, -)

        if [ -n "$ids" ]; then
          echo "IDs of packages updated within the last period: ${ids}"
          echo "ids=${ids}" >> $GITHUB_OUTPUT
        else
          echo "No packages found within the last period, skipping deletion."
          echo "ids=skip" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Delete package
      if: ${{ steps.pkgids.outputs.ids != 'skip' }}
      uses: actions/delete-package-versions@v4
      with: 
        package-name: ${{ steps.setup.outputs.pkg }}
        package-type: 'maven'
        package-version-ids: ${{ steps.pkgids.outputs.ids }}
        token: ${{ steps.generate_token.outputs.token }}
